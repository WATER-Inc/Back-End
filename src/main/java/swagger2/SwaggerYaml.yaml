openapi: 3.0.3
info:
  title: WATER
  version: 1.0.0
  description: WATER
servers:
  - url: http://localhost:8080/water_war
    description: Server
paths:
  /login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                userpassword:
                  type: string
              required:
                - username
                - userpassword
            example:
              username: user2
              userpassword: hash2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: string
                  message:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type:string
      summary: Login
      description: Logs in a user with a username and password.
  /register:
    post:
      summary: Register user
      tags:
        - register
      requestBody:
        description: JSON object containing user data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                name:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "999":
          description: Error on client side
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - cors: [ ]
  /logout:
    get:
      summary: LogOut user
      tags:
        - getters
      responses:
        "999":
          description: error on client side
        "200":
          description: Logout user
          content:
            application/json:
              schema:
                type: string
                example: null
      security:
        - cors: []
  /chats:
    post:
      summary: Get user's chats
      tags:
        - chats
      requestBody:
        description: JSON object containing user ID
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
              required:
                - id
      responses:
        "999":
          description: Error on client side
        "200":
          description: User's chats retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  chats:
                    type: array
                    items:
                      $ref: '#/components/schemas/Chat'
      security:
        - cors: [ ]
  /chat:
    post:
      summary: Get chat's messages
      tags:
        - chat
      requestBody:
        description: JSON object containing chat ID
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
              required:
                - id
      responses:
        "999":
          description: Error on client side
        "200":
          description: Chat's messages retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
      security:
        - cors: [ ]

securitySchemes:
  cors:
    type: apiKey
    name: Access-Control-Allow-Origin
    in: header